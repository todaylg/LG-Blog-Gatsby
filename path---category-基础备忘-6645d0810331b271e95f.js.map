{"version":3,"sources":["webpack:///path---category-基础备忘-6645d0810331b271e95f.js","webpack:///./.cache/json/category-基础备忘.json"],"names":["webpackJsonp","398","module","exports","data","allMarkdownRemark","totalCount","edges","node","fields","slug","excerpt","timeToRead","frontmatter","title","category","site","siteMetadata","facebook","appId","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,WAAA,EAAAC,QAAyBC,MAAQC,QAAUC,KAAA,SAAeC,QAAA,+IAAAC,WAAA,EAAAC,aAAwLC,MAAA,QAAAC,SAAA,WAAsCP,MAAQC,QAAUC,KAAA,UAAgBC,QAAA,oIAAAC,WAAA,EAAAC,aAA6KC,MAAA,SAAAC,SAAA,WAAuCP,MAAQC,QAAUC,KAAA,UAAgBC,QAAA,2IAAAC,WAAA,EAAAC,aAAoLC,MAAA,WAAAC,SAAA,WAAyCP,MAAQC,QAAUC,KAAA,SAAeC,QAAA,+IAAAC,WAAA,EAAAC,aAAwLC,MAAA,QAAAC,SAAA,WAAsCP,MAAQC,QAAUC,KAAA,YAAkBC,QAAA,yIAAAC,WAAA,EAAAC,aAAkLC,MAAA,UAAAC,SAAA,YAAwCC,MAASC,cAAgBC,UAAYC,MAAA,OAAcC,aAAgBL,SAAA","file":"path---category-基础备忘-6645d0810331b271e95f.js","sourcesContent":["webpackJsonp([83483526085762],{\n\n/***/ 398:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"totalCount\":5,\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/vim/\"},\"excerpt\":\"Vim基本操作备忘 自己用的场景还是偏少，所以命令根本记不住。。。备忘把常用的简单指令记一下。 基本移动 h j k l ⬅️ ⬇️ ⬆️ ➡️ H 本屏首行 L 本屏末行 o 这一行的最前处 $ 这一行的最末尾 G 移动到整个文档最后一行 gg 移动到整个文档首行，相当于1g…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Vim基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/sass/\"},\"excerpt\":\"Sass基础 Sass也好Less也好，总还是要学习一个的，虽然自己平时整的小东西可能还是直接用CSS还更简单，但是要是项目大了以及要考虑便于维护的情况下，那还是得用这两的啦。 变量 Sass用 符来标识变量（‘$’向来是兵家必争之地啊2333），Sass…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Sass基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/flex/\"},\"excerpt\":\"Flex布局基础 传统的布局方案，无非就是position(或者float、fixed)结合方向定位以及display等来整，一来比较复杂容易乱，二来对于一些复杂的布局实现起来会有困难。而flex的出现大大简化了这一过程，所以以后一般能用flex布局的尽量全改用flex…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Flex布局基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/git/\"},\"excerpt\":\"Git常用指令 用过一段时间的Github客户端，感觉确实是简单粗暴有效，但是缺点也很明显：用到一些高级或者说是复杂一些的功能时就无能为力了，并且使用命令行自己也知晓每一步都在干啥，所以使用命令行还是利大于弊的 Git基本命令 git init/git clone 初始化git…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Git基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/regexp/\"},\"excerpt\":\"正则表达式基础 正则表达式是用于匹配字符串中字符组合的模式。嗷嗷有用。在 JavaScript中，正则表达式也是对象。 这些模式被用于 RegExp的 exec()（一个在字符串中执行查找匹配的RegExp方法，它返回一个数组（未匹配到则返回null）。） test…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"正则表达式基础\",\"category\":\"基础备忘\"}}}]},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"category\":\"基础备忘\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---category-基础备忘-6645d0810331b271e95f.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"totalCount\":5,\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/vim/\"},\"excerpt\":\"Vim基本操作备忘 自己用的场景还是偏少，所以命令根本记不住。。。备忘把常用的简单指令记一下。 基本移动 h j k l ⬅️ ⬇️ ⬆️ ➡️ H 本屏首行 L 本屏末行 o 这一行的最前处 $ 这一行的最末尾 G 移动到整个文档最后一行 gg 移动到整个文档首行，相当于1g…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Vim基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/sass/\"},\"excerpt\":\"Sass基础 Sass也好Less也好，总还是要学习一个的，虽然自己平时整的小东西可能还是直接用CSS还更简单，但是要是项目大了以及要考虑便于维护的情况下，那还是得用这两的啦。 变量 Sass用 符来标识变量（‘$’向来是兵家必争之地啊2333），Sass…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Sass基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/flex/\"},\"excerpt\":\"Flex布局基础 传统的布局方案，无非就是position(或者float、fixed)结合方向定位以及display等来整，一来比较复杂容易乱，二来对于一些复杂的布局实现起来会有困难。而flex的出现大大简化了这一过程，所以以后一般能用flex布局的尽量全改用flex…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Flex布局基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/git/\"},\"excerpt\":\"Git常用指令 用过一段时间的Github客户端，感觉确实是简单粗暴有效，但是缺点也很明显：用到一些高级或者说是复杂一些的功能时就无能为力了，并且使用命令行自己也知晓每一步都在干啥，所以使用命令行还是利大于弊的 Git基本命令 git init/git clone 初始化git…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Git基础\",\"category\":\"基础备忘\"}}},{\"node\":{\"fields\":{\"slug\":\"/regexp/\"},\"excerpt\":\"正则表达式基础 正则表达式是用于匹配字符串中字符组合的模式。嗷嗷有用。在 JavaScript中，正则表达式也是对象。 这些模式被用于 RegExp的 exec()（一个在字符串中执行查找匹配的RegExp方法，它返回一个数组（未匹配到则返回null）。） test…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"正则表达式基础\",\"category\":\"基础备忘\"}}}]},\"site\":{\"siteMetadata\":{\"facebook\":{\"appId\":\"\"}}}},\"pathContext\":{\"category\":\"基础备忘\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/category-基础备忘.json\n// module id = 398\n// module chunks = 83483526085762"],"sourceRoot":""}