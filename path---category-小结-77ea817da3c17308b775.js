webpackJsonp([50353500245631],{401:function(e,t){e.exports={data:{allMarkdownRemark:{totalCount:6,edges:[{node:{fields:{slug:"/problem-record/"},excerpt:"日常工作和学习过程中的一些踩坑记录~ 踩坑总结： 兼容性： IE IE8不支持transform、background-color IE9不支持transition、animation、linear-gradient IE不支持animation变化伪类content…",timeToRead:2,frontmatter:{title:"日常采坑记录",category:"小结"}}},{node:{fields:{slug:"/video-alpha/"},excerpt:"前言 在平时的工作中我们会遇到一些动画师设计的动效需要在Web实现，大多数情况下我们使用CSS3就可以搞定了，但对于一些复杂的动效（比如粒子效果）用我们就得另寻他法了。那在考虑性能与完成效果的前提下，我们该哪种方案复现这些复杂的动效呢？ 方案对比 动态图片（gif） 使用gif…",timeToRead:5,frontmatter:{title:"Web动效通用实现方案探究",category:"小结"}}},{node:{fields:{slug:"/webVR-and-web-audio-api/"},excerpt:"借着毕设的机会，接触了一下WebVR和Web Audio API，以及通信本行的数字信号处理的知识： 老样子，先上结果： WebVR-Audio-Visualizer 当年在DPS…",timeToRead:3,frontmatter:{title:"初探WebVR与Web Audio API",category:"小结"}}},{node:{fields:{slug:"/Internship-summary/"},excerpt:"搁学校待了…",timeToRead:1,frontmatter:{title:"实习小结",category:"小结"}}},{node:{fields:{slug:"/canvas-renderermation/"},excerpt:"实习期间接触到了Canvas2D渲染与数据可视化，然后进行了一波探究和实践： 探究能否在保留高灵活性同时，借助WebGL Renderer来突破SVG与Canvas2D Renderer渲染大量节点的瓶颈。 D3.js的灵活性高，但是Renderer还停留在Canvas2D…",timeToRead:9,frontmatter:{title:"初探Canvas2D渲染与数据可视化",category:"小结"}}},{node:{fields:{slug:"/svg-outlineAnimation/"},excerpt:"基础知识 1.SVG (Scalable Vector Graphics) 首先需要知道SVG大概是啥，SVG即可缩放矢量图形（Scalable Vector Graphics),是一种用XML定义的语言，用来描述二维矢量图形，并且已是W3C标准，所以它也可以和CSS、DOM…",timeToRead:3,frontmatter:{title:"SVG动画制作小结",category:"小结"}}}]},site:{siteMetadata:{facebook:{appId:""}}}},pathContext:{category:"小结"}}}});
//# sourceMappingURL=path---category-小结-77ea817da3c17308b775.js.map