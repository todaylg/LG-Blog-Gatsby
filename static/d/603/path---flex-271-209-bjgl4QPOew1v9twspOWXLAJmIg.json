{"data":{"post":{"id":"6b2b4c06-117b-550e-b3ff-e5967d15b966","html":"<h2>Flex布局基础</h2>\n<p>传统的布局方案，无非就是position(或者float、fixed)结合方向定位以及display等来整，一来比较复杂容易乱，二来对于一些复杂的布局实现起来会有困难。而flex的出现大大简化了这一过程，所以以后一般能用flex布局的尽量全改用flex布局来整（现代浏览器都已支持）</p>\n<h4>基本概念</h4>\n<p>Flex即弹性布局(Flexible Box)，父元素设置为flex布局后，子元素会自动成为其item，并且子元素的float、clear和vertical-align属性都会失效。</p>\n<p><strong>理解flex最重要的个人觉得就是理解主轴(X轴)和副轴(Y轴)啦</strong>,设想有了x和y轴，在二维(即平面)中还有什么布局是不能实现的呢？当然，也会有一些特殊的布局要求（比如倒序等等），这些再结合flex容器的一些属性，那么也是非常轻松的解决了</p>\n<h3>属性</h3>\n<h4>容器(Box)属性</h4>\n<p>1.Flex-direction</p>\n<p>该属性用于设置item的排列方向：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">row</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span>：主轴为水平，起点为左端\n<span class=\"token property\">row-reverse</span><span class=\"token punctuation\">:</span> 主轴为水平，起点为右端\ncolumn：主轴为垂直，起点为上端\ncolume-reverse：主轴为垂直，起点为下端</code></pre></div>\n<p>2.Flex-wrap</p>\n<p>该属性设置当单行轴线容纳不下时的换行方式</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">nowrap</span><span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>不换行<span class=\"token punctuation\">(</span>最多压缩到最小宽度<span class=\"token punctuation\">)</span>\n<span class=\"token property\">wrap</span><span class=\"token punctuation\">:</span>换行\n<span class=\"token property\">wrap-reverse</span><span class=\"token punctuation\">:</span>换行,但是第一行在下面</code></pre></div>\n<p>3.Justify-content</p>\n<p>该属性定义item在主轴上的对齐方式（与轴的方向挂钩）</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">flex-start</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span>：item们左对齐\nflex-end：item们右对齐\ncenter： item们居中对齐\nspace-between：item们两端到顶，剩下的间隔均分在每个item之间。\nspace-around：每个item两侧的间隔相等,可以理解为每个item的边距都相等（均分空隔）</code></pre></div>\n<p>4.Align-items</p>\n<p>该属性自然就是定义副轴上的对齐方式了(也与轴的方向同步)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">stretch</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span>：item们会按容器的高度拉伸<span class=\"token punctuation\">(</span>填满<span class=\"token punctuation\">)</span>。\nflex-start：item们顶对齐。\nflex-end：item们底对齐。\ncenter：item们中心对齐。\n<span class=\"token property\">baseline</span><span class=\"token punctuation\">:</span> item们基线对齐。//TODO</code></pre></div>\n<p>5.Align-center</p>\n<p>该属性定义多根轴线(各个轴线不同设置但都听它的)的对齐方式(单轴线则此属性无效)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">align-center</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">stretch</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span>：轴线按副轴进行拉伸<span class=\"token punctuation\">(</span>填满<span class=\"token punctuation\">)</span>。\nflex-start：按副轴的起点对齐。\nflex-end：按副轴的终点对齐。\ncenter：按副轴的中点对齐。\nspace-between：以副轴两端到顶，轴线之间的间隔平均分布。\nspace-around：每条轴线两侧的间隔都相等。</code></pre></div>\n<p>6.Flex-flow</p>\n<p>该属性就是flex-direction和flex-wrap的简写形式(以空格隔开)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">row <span class=\"token function\">nowrap</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span></code></pre></div>\n<h5>Item的属性</h5>\n<p>1.order</p>\n<p>该属性定义item的排列顺序。数值越小越靠前(可以为负数，同级按排列顺序分先后)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">order</span><span class=\"token punctuation\">:</span>0    <span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span></code></pre></div>\n<p>2.flex-grow</p>\n<p>该属性定义item放大几倍</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span>0    <span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span><span class=\"token comment\">/*即不放大*/</span></code></pre></div>\n<p>3.flex-shrink</p>\n<p>该属性定义item缩小几倍</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span><span class=\"token function\">1</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span><span class=\"token comment\">/*即不放缩小*/</span></code></pre></div>\n<p>4.flex-basis</p>\n<p>该属性定义item占据主轴的多少(px),这样item就可以占据固定的空间了(剩下的空间再其他item再按设定的属性分)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span><span class=\"token function\">auto</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span></code></pre></div>\n<p>5.flex</p>\n<p>该属性是flex-grow, flex-shrink 和 flex-basis的简写</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex</span><span class=\"token punctuation\">:</span>0 1 <span class=\"token function\">auto</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span><span class=\"token comment\">/*后两个属性可选，一般优先使用该属性而不是分开写*/</span></code></pre></div>\n<p>6.align-self</p>\n<p>该属性用于单个item设置其特殊的对齐方式(覆盖align-item的设置)是flex-grow, flex-shrink 和 flex-basis的简写</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">align-self</span><span class=\"token punctuation\">:</span><span class=\"token function\">auto</span><span class=\"token punctuation\">(</span>defalut<span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/flex/","prefix":"2017-08-05"},"frontmatter":{"title":"Flex布局基础","author":"todaylg","category":"基础备忘","cover":{"childImageSharp":{"resize":{"src":"/static/bg-dd46cc016e14d2bbf17c55132528a638-ada8c.jpg"}}}}},"authornote":{"id":"20cdfd79-00b3-57fb-a29f-bb96dcd133a8","html":"<p><strong>todaylg</strong> </p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/flex/","prev":{"id":"3406a977-720c-501c-a0b0-ef18c97d7670","fields":{"slug":"/git/","prefix":"2017-07-23","source":"posts"},"frontmatter":{"title":"Git基础","category":"基础备忘"}},"next":{"id":"391cf25f-3217-5877-a1f0-0fba5301c4ae","fields":{"slug":"/sass/","prefix":"2017-08-11","source":"posts"},"frontmatter":{"title":"Sass基础","category":"基础备忘"}},"source":"posts"}}