{"data":{"post":{"id":"d7981c79-3b5d-54c4-9484-3cb740be22c9","html":"<p>给场景添加上shadow可以大大提高场景的真实感，所以讲道理关于Shadow的实现还是要学习一波的～</p>\n<p>最简易的Shadow实现方法就是直接在物体下方摆张黑底贴图啦。好处自然是省掉了Shadow的相关计算，非常节约性能，所以如今在很多游戏里都还可以见到使用；坏处则是其毕竟是“粗旷“的模拟，效果及通用性都差强人意。</p>\n<p>当前较流行的实时Shadow渲染技术是<strong>Shadow Map</strong>与<strong>Shadow Volume</strong>，二者的介绍及比较可以参考<a href=\"https://www.cnblogs.com/wonderKK/p/5069863.html\">这篇文章</a>。</p>\n<p>两种技术各有优劣，但是Shadow Map的实现相较于Shadow Volume更简易，并且场景适用性、渲染效果、性能都不差，所以在实时渲染中Shadow Map更为流行。</p>\n<p>总结一波实践Shadow Map的涉及的一些原理以及实践接入LGL过程中所遇到的问题：</p>\n<p><a href=\"http://todaylg.com/LGL/examples/?src=shadowMap_DirSpot.html\">实践Example</a></p>\n<h2>ShadowMap</h2>\n<p>shadowMap的原理其实很简单：以光源的视角渲染整个场景，在这个视角下看不到的物体就是在阴影中（也就是被挡住了）。</p>\n<p>所以整个ShadowMap的渲染可以分为两大步：</p>\n<ul>\n<li>\n<p>1.以光源为视点对场景进行渲染，得到场景中距离光源最近片元深度值的DepthTexture（GPU实现）</p>\n</li>\n<li>\n<p>2.回到视点正常渲染场景，通过比较场景中片元到光源的距离与DepthTexture相应位置值的大小来判断该片元是否处于阴影中</p>\n</li>\n</ul>\n<p>实践过程中还是遇到了挺多问题的：</p>\n<h3>Depth Texture</h3>\n<p>在正常渲染场景之前需要先完成DepthTexture的渲染，而渲染DepthTexture只关心场景中物体的深度值，所以Shader可以简化到很少：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">const</span> vertex <span class=\"token operator\">=</span> `\n<span class=\"token keyword\">precision</span> <span class=\"token keyword\">highp</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">precision</span> <span class=\"token keyword\">highp</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> uv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> position<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> normal<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> worldMatrix<span class=\"token punctuation\">;</span> <span class=\"token comment\">//使用WorldMatrix来同步父级Transform的变换</span>\n\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> lightSpaceMatrix<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//完成视点变换即可</span>\n    gl_Position <span class=\"token operator\">=</span> lightSpaceMatrix <span class=\"token operator\">*</span> worldMatrix <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n`<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fragment <span class=\"token operator\">=</span> `#version <span class=\"token number\">300</span> es\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// gl_FragDepth = gl_FragCoord.z; //默认就是读取gl_FragCoord.z的值，</span>\n\n<span class=\"token punctuation\">}</span>\n`<span class=\"token punctuation\">;</span>\n\nexport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>vertex<span class=\"token punctuation\">,</span> fragment<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Skinning/MorphTarget：</strong></p>\n<p>需要注意Skinning和MorphTarget这些顶点在Shader中还会进行特殊处理的特性，若要实现渲染包含这些特性的Shadow，那么在渲染DepthTexture的Shader也要添加同步的顶点变换，否则就会一直停留在绑定姿势的顶点位置。Skinning/MorphTarget在前面的<a href=\"http://todaylg.com/LG-Blog-Gatsby/glTF-record/\">glTF学习笔记</a>有记录，这里不再赘述。</p>\n<p><strong>API差别：</strong></p>\n<p>在WebGL1.0中渲染DepthTexture需要依赖插件<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\">WEBGL_depth_texture</a>，2.0原生支持。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//WebGL1.0 + WEBGL_depth_texture</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">texImage2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_COMPONENT</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_COMPONENT</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">UNSIGNED_INT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//WebGL2.0</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">texImage2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_COMPONENT</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_COMPONENT24</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">UNSIGNED_INT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>DepthTexture的精度：</strong></p>\n<p>在设置Texture的internalFormat时便决定了能存储的Depth值精度（gl.DEPTH_COMPONENT24 => 24位精度）：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">//1.渲染DepthTexture时的片元着色器</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// gl_FragDepth = gl_FragCoord.z;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//2.使用DepthTexture时：</span>\n<span class=\"token keyword\">float</span> depth <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>depthMap<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span> <span class=\"token comment\">//深度值会存储在R通道</span></code></pre></div>\n<p>我们还可以在渲染DepthTexture时将深度值存储在RGBA通道，在使用DepthTexture的时候再复原，这样便有4x8=32位的精度：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//1.渲染DepthTexture时的片元着色器</span>\n\nvec4 <span class=\"token function\">packDepthToRGBA</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> float z <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    vec4 bitShift <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256.0</span> <span class=\"token operator\">*</span> <span class=\"token number\">256.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256.0</span> <span class=\"token operator\">*</span> <span class=\"token number\">256.0</span> <span class=\"token operator\">*</span> <span class=\"token number\">256.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//左移0/8/16/32位</span>\n\n    vec4 rgbaDepth <span class=\"token operator\">=</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">*</span> bitShift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//取左移后的小数部分</span>\n    <span class=\"token comment\">//左移0位 - 左移8位的多余部分：1.0/256</span>\n    <span class=\"token comment\">//左移8位 - 左移16位的多余部分：1.0/256</span>\n    <span class=\"token comment\">//左移16位 - 左移24位的多余部分：1.0/256</span>\n    <span class=\"token comment\">//左移24位 - 后面的不用管了:0</span>\n    <span class=\"token keyword\">const</span> vec4 bitMask <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">256.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">256.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">256.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> rgbaDepth <span class=\"token operator\">-=</span> rgbaDepth<span class=\"token punctuation\">.</span>gbaa <span class=\"token operator\">*</span> bitMask<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nout vec4 FragColor<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    FragColor <span class=\"token operator\">=</span> <span class=\"token function\">packDepthToRGBA</span><span class=\"token punctuation\">(</span>gl_FragCoord<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//2.使用DepthTexture时：</span>\nfloat <span class=\"token function\">unpackRGBAToDepth</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> vec4 v <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//右移相应位数复原Depth</span>\n    <span class=\"token keyword\">const</span> vec4 bitShift <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">256.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">256.0</span><span class=\"token operator\">*</span><span class=\"token number\">256.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">256.0</span><span class=\"token operator\">*</span><span class=\"token number\">256.0</span><span class=\"token operator\">*</span><span class=\"token number\">256.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    float depth <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> bitShift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> depth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ortho/Perspective：</strong></p>\n<p>在渲染深度贴图时，Light的正交投影(Orthographic)和透视投影(Projection)之间有所不同，正交投影中深度值保持线性，而透视投影深度值为非线性，在Shader中与View Space下的深度进行比较时需要逆变换还原到线性的深度值：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// Projection &lt;=> View</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">viewZToOrthographicDepth</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> viewZ<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> near<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> far <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> viewZ <span class=\"token operator\">+</span> near <span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span> near <span class=\"token operator\">-</span> far <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">orthographicDepthToViewZ</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> linearClipZ<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> near<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> far <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> linearClipZ <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span> near <span class=\"token operator\">-</span> far <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> near<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">viewZToPerspectiveDepth</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> viewZ<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> near<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> far <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> near <span class=\"token operator\">+</span> viewZ <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> far <span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> far <span class=\"token operator\">-</span> near <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> viewZ <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">perspectiveDepthToViewZ</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> invClipZ<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> near<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> far <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> near <span class=\"token operator\">*</span> far <span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> far <span class=\"token operator\">-</span> near <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> invClipZ <span class=\"token operator\">-</span> far <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">readOrthoDepth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> depthSampler<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> coord <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//直接读取就行</span>\n\n    <span class=\"token keyword\">float</span> depth <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>depthSampler<span class=\"token punctuation\">,</span> coord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> depth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">readPerspectiveDepth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> depthSampler<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> coord<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> near<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> far <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> fragCoordZ <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>depthSampler<span class=\"token punctuation\">,</span> coord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Screen Space </span>\n\n    <span class=\"token keyword\">float</span> z <span class=\"token operator\">=</span> fragCoordZ <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clip Space </span>\n    <span class=\"token keyword\">float</span> viewZ <span class=\"token operator\">=</span> <span class=\"token function\">perspectiveDepthToViewZ</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> near<span class=\"token punctuation\">,</span> far<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    viewZ <span class=\"token operator\">=</span> <span class=\"token function\">viewZToOrthographicDepth</span><span class=\"token punctuation\">(</span>viewZ<span class=\"token punctuation\">,</span> near<span class=\"token punctuation\">,</span> far<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> viewZ<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">readCubeMapDepth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">samplerCube</span> depthSampler<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> coord<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> near<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> far <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> fragCoordZ <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>depthSampler<span class=\"token punctuation\">,</span> coord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Screen Space [0,1]</span>\n    <span class=\"token keyword\">float</span> z <span class=\"token operator\">=</span> fragCoordZ <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clip Space [-1,1]</span>\n    <span class=\"token keyword\">float</span> viewZ <span class=\"token operator\">=</span> <span class=\"token function\">perspectiveDepthToViewZ</span><span class=\"token punctuation\">(</span>fragCoordZ<span class=\"token punctuation\">,</span> near<span class=\"token punctuation\">,</span> far<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// View Space</span>\n    viewZ <span class=\"token operator\">=</span> <span class=\"token function\">viewZToOrthographicDepth</span><span class=\"token punctuation\">(</span>viewZ<span class=\"token punctuation\">,</span> near<span class=\"token punctuation\">,</span> far<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// linear</span>\n    <span class=\"token keyword\">return</span> viewZ<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>CubeDepthTexture：</strong></p>\n<p>点光源阴影的渲染依赖CubeDepthTexture：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//创建CubeMap Texture</span>\n<span class=\"token keyword\">let</span> cubeTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">createTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindTexture</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_CUBE_MAP</span><span class=\"token punctuation\">,</span> cubeTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token comment\">//设置Texture参数</span>\n<span class=\"token comment\">//渲染每个面:</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">framebufferTexture2D</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_ATTACHMENT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_CUBE_MAP_POSITIVE_X</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> light<span class=\"token punctuation\">.</span>depthTexture<span class=\"token punctuation\">.</span>texture<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">renderScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Light</h3>\n<p>在得到DepthTexture之后就可以进行Shadow的渲染了，计算光照效果都用的是<a href=\"https://learnopengl-cn.github.io/05%20Advanced%20Lighting/01%20Advanced%20Lighting/\">Blinn-Phong</a>模型进行计算，但每种不同的光源所模拟的光照效果以及对应的Shadow渲染方法都不太一样，需要进行区分处理：</p>\n<p><strong>Direction Light：</strong></p>\n<p>Direction Light模拟的是平行光效果，所有光线都是平行的（比如太阳光）</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">//Light Calulation</span>\n<span class=\"token keyword\">vec3</span> <span class=\"token function\">CalcDirLight</span><span class=\"token punctuation\">(</span>DirectionalLight dirLight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec3</span> lightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>dirLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> dirLight<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>cameraPosition <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> halfwayDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>lightDir <span class=\"token operator\">+</span> viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// diffuse</span>\n    <span class=\"token keyword\">vec3</span> diffuse <span class=\"token operator\">=</span> dirLight<span class=\"token punctuation\">.</span>diffuseFactor <span class=\"token operator\">*</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span> lightDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> dirLight<span class=\"token punctuation\">.</span>lightColor<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// specular</span>\n    <span class=\"token keyword\">float</span> spec <span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span> halfwayDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> specular <span class=\"token operator\">=</span> dirLight<span class=\"token punctuation\">.</span>specularFactor <span class=\"token operator\">*</span> spec <span class=\"token operator\">*</span> dirLight<span class=\"token punctuation\">.</span>lightColor<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//Shadow Calulation</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">dirShadowMaskCal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> shadowMap<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec4</span> fragPosLightSpace<span class=\"token punctuation\">,</span> DirectionalLight dirLight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> normalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec3</span> lightDirVal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>dirLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// View Space => Screen Space</span>\n\n    <span class=\"token keyword\">vec3</span> projCoords <span class=\"token operator\">=</span> fragPosLightSpace<span class=\"token punctuation\">.</span>xyz <span class=\"token operator\">/</span> fragPosLightSpace<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    projCoords <span class=\"token operator\">=</span> projCoords <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> bias <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.05</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normalVal<span class=\"token punctuation\">,</span> lightDirVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Get current fragment depth</span>\n    projCoords<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span><span class=\"token operator\">=</span> bias<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> shadow <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//PCF</span>\n    <span class=\"token preprocessor builtin\">#ifdef</span> SHADOWMAP_TYPE_PCF\n        <span class=\"token keyword\">vec2</span> texelSize <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">textureSize</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span>\n\n        <span class=\"token punctuation\">{</span>\n\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span>\n\n            <span class=\"token punctuation\">{</span>\n\n                <span class=\"token keyword\">float</span> pcfDepth <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\n                pcfDepth <span class=\"token operator\">=</span> <span class=\"token function\">readOrthoDepth</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> projCoords<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">+</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> texelSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n                shadow <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">compareDepthTexture</span><span class=\"token punctuation\">(</span>pcfDepth<span class=\"token punctuation\">,</span> projCoords<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>    \n\n        <span class=\"token punctuation\">}</span>\n\n            shadow <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">9.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token preprocessor builtin\">#else</span>\n\n        shadow <span class=\"token operator\">=</span> <span class=\"token function\">compareDepthTexture</span><span class=\"token punctuation\">(</span><span class=\"token function\">readOrthoDepth</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> projCoords<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> projCoords<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token preprocessor builtin\">#endif</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>添加阴影偏移值bias、PCF的原理都可见<a href=\"https://learnopengl-cn.github.io/05%20Advanced%20Lighting/03%20Shadows/01%20Shadow%20Mapping/\">文章</a></p>\n<p><strong>Spot Light：</strong></p>\n<p>Spot Light模拟的是聚光灯的效果，向一个方向发射光速（比如手电筒、台灯）:</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">//Light Calulation</span>\n<span class=\"token keyword\">vec3</span> <span class=\"token function\">CalcSpotLight</span><span class=\"token punctuation\">(</span>SpotLight spotLight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// diffuse与specular计算与DirectionLight一致</span>\n    <span class=\"token comment\">// attenuation</span>\n    <span class=\"token keyword\">float</span> distance <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>spotLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> attenuation <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>spotLight<span class=\"token punctuation\">.</span>constant <span class=\"token operator\">+</span> spotLight<span class=\"token punctuation\">.</span>linear <span class=\"token operator\">*</span> distance <span class=\"token operator\">+</span> spotLight<span class=\"token punctuation\">.</span>quadratic <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">*</span> distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n    <span class=\"token comment\">// spotlight intensity</span>\n    <span class=\"token keyword\">float</span> theta <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>lightDir<span class=\"token punctuation\">,</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>spotLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> spotLight<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> epsilon <span class=\"token operator\">=</span> spotLight<span class=\"token punctuation\">.</span>cutOff <span class=\"token operator\">-</span> spotLight<span class=\"token punctuation\">.</span>outerCutOff<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> intensity <span class=\"token operator\">=</span> <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>theta <span class=\"token operator\">-</span> spotLight<span class=\"token punctuation\">.</span>outerCutOff<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> epsilon<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// combine results</span>\n    diffuse <span class=\"token operator\">*</span><span class=\"token operator\">=</span> attenuation <span class=\"token operator\">*</span> intensity<span class=\"token punctuation\">;</span>\n    specular <span class=\"token operator\">*</span><span class=\"token operator\">=</span> attenuation <span class=\"token operator\">*</span> intensity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//Shadow Calulation</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">spotShadowMaskCal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> shadowMap<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec4</span> fragPosLightSpace<span class=\"token punctuation\">,</span> SpotLight spotLight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> normalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec3</span> lightDirVal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>spotLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">float</span> clipSpaceDepth <span class=\"token operator\">=</span> fragPosLightSpace<span class=\"token punctuation\">.</span>z <span class=\"token operator\">/</span> fragPosLightSpace<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Clip Space => View Space</span>\n    <span class=\"token keyword\">float</span> linearDepth <span class=\"token operator\">=</span> <span class=\"token function\">perspectiveDepthToViewZ</span><span class=\"token punctuation\">(</span>fragPosLightSpace<span class=\"token punctuation\">.</span>z<span class=\"token operator\">/</span>fragPosLightSpace<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraNear<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    linearDepth <span class=\"token operator\">=</span> <span class=\"token function\">viewZToOrthographicDepth</span><span class=\"token punctuation\">(</span>linearDepth<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraNear<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Clip Space => Screen Space</span>\n    <span class=\"token keyword\">vec3</span> projCoords <span class=\"token operator\">=</span> fragPosLightSpace<span class=\"token punctuation\">.</span>xyz <span class=\"token operator\">/</span> fragPosLightSpace<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    projCoords <span class=\"token operator\">=</span> projCoords <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">float</span> bias <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.05</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normalVal<span class=\"token punctuation\">,</span> lightDirVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    linearDepth <span class=\"token operator\">-</span><span class=\"token operator\">=</span> bias<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">float</span> shadow <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token preprocessor builtin\">#ifdef</span> SHADOWMAP_TYPE_PCF\n        <span class=\"token keyword\">vec2</span> texelSize <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">textureSize</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">float</span> pcfDepth <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n                pcfDepth <span class=\"token operator\">=</span> <span class=\"token function\">readPerspectiveDepth</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> projCoords<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">+</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> texelSize<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraNear<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n                shadow <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">compareDepthTexture</span><span class=\"token punctuation\">(</span>pcfDepth<span class=\"token punctuation\">,</span> linearDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>    \n        <span class=\"token punctuation\">}</span>\n        shadow <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">9.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token preprocessor builtin\">#else</span>\n        shadow <span class=\"token operator\">=</span> <span class=\"token function\">compareDepthTexture</span><span class=\"token punctuation\">(</span><span class=\"token function\">readPerspectiveDepth</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> projCoords<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraNear<span class=\"token punctuation\">,</span> spotLight<span class=\"token punctuation\">.</span>lightCameraFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> linearDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token preprocessor builtin\">#endif</span>\n\n    <span class=\"token keyword\">return</span> shadow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Point Light：</strong></p>\n<p>Point Light模拟的是点光源的效果，向所有方向发射光线（比如灯泡）</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">//Light Calulation</span>\n<span class=\"token keyword\">vec3</span> <span class=\"token function\">CalcPointLight</span><span class=\"token punctuation\">(</span>PointLight pointLight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec3</span> viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>cameraPosition <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> lightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>pointLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> halfwayDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>lightDir <span class=\"token operator\">+</span> viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// diffuse</span>\n    <span class=\"token keyword\">vec3</span> diffuse <span class=\"token operator\">=</span> pointLight<span class=\"token punctuation\">.</span>diffuseFactor <span class=\"token operator\">*</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span> lightDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pointLight<span class=\"token punctuation\">.</span>lightColor<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// specular</span>\n    <span class=\"token keyword\">float</span> spec <span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span> halfwayDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> specular <span class=\"token operator\">=</span> pointLight<span class=\"token punctuation\">.</span>specularFactor <span class=\"token operator\">*</span> spec <span class=\"token operator\">*</span> pointLight<span class=\"token punctuation\">.</span>lightColor<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// attenuation</span>\n    <span class=\"token keyword\">float</span> distance <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>pointLight<span class=\"token punctuation\">.</span>lightPos <span class=\"token operator\">-</span> vFragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> attenuation <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>pointLight<span class=\"token punctuation\">.</span>constant <span class=\"token operator\">+</span> pointLight<span class=\"token punctuation\">.</span>linear <span class=\"token operator\">*</span> distance <span class=\"token operator\">+</span> pointLight<span class=\"token punctuation\">.</span>quadratic <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">*</span> distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n    <span class=\"token comment\">// combine results</span>\n    diffuse <span class=\"token operator\">*</span><span class=\"token operator\">=</span> attenuation<span class=\"token punctuation\">;</span>\n    specular <span class=\"token operator\">*</span><span class=\"token operator\">=</span> attenuation<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>点光源的阴影依赖CubeDepthTexture，其他的大同小异：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">float</span> <span class=\"token function\">pointShadowMaskCal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">samplerCube</span> shadowMap<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec4</span> fragPosLightSpace<span class=\"token punctuation\">,</span> PointLight pointLight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// Get vector between fragment position and light position</span>\n    <span class=\"token keyword\">vec3</span> fragToLight <span class=\"token operator\">=</span> vFragPos <span class=\"token operator\">-</span> pointLight<span class=\"token punctuation\">.</span>lightPos<span class=\"token punctuation\">;</span> <span class=\"token comment\">//View Space</span>\n    <span class=\"token keyword\">float</span> currentDepth <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>fragToLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// get linear depth: (0=>1)</span>\n    <span class=\"token keyword\">float</span> closestDepth <span class=\"token operator\">=</span> <span class=\"token function\">readCubeMapDepth</span><span class=\"token punctuation\">(</span>shadowMap<span class=\"token punctuation\">,</span> fragToLight<span class=\"token punctuation\">,</span> pointLight<span class=\"token punctuation\">.</span>lightCameraNear<span class=\"token punctuation\">,</span> pointLight<span class=\"token punctuation\">.</span>lightCameraFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// bias</span>\n    closestDepth <span class=\"token operator\">+</span><span class=\"token operator\">=</span>  <span class=\"token number\">0.0002</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// (0=>1) => (0=>far)</span>\n    closestDepth <span class=\"token operator\">*</span><span class=\"token operator\">=</span> pointLight<span class=\"token punctuation\">.</span>lightCameraFar<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> shadow <span class=\"token operator\">=</span> <span class=\"token function\">step</span><span class=\"token punctuation\">(</span>currentDepth<span class=\"token punctuation\">,</span> closestDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> shadow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最后再将各个光源结果累加：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec3</span> ambient <span class=\"token operator\">=</span> ambientStrength <span class=\"token operator\">*</span> ambientLightColor<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> normal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>vNormal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> shadow <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token preprocessor builtin\">#if</span> NUM_DIR_LIGHTS <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">vec3</span> perDirLightRes <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> NUM_DIR_LIGHTS<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            perDirLightRes <span class=\"token operator\">=</span> <span class=\"token function\">CalcDirLight</span><span class=\"token punctuation\">(</span>dirLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            shadow <span class=\"token operator\">=</span> <span class=\"token function\">dirShadowMaskCal</span><span class=\"token punctuation\">(</span>dirShadowMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dirFragPos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dirLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            result <span class=\"token operator\">+</span><span class=\"token operator\">=</span> perDirLightRes <span class=\"token operator\">*</span> shadow<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor builtin\">#endif</span>\n    <span class=\"token preprocessor builtin\">#if</span> NUM_SPOT_LIGHTS <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">vec3</span> perSpotLightRes <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> NUM_SPOT_LIGHTS<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            perSpotLightRes <span class=\"token operator\">=</span> <span class=\"token function\">CalcSpotLight</span><span class=\"token punctuation\">(</span>spotLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            shadow <span class=\"token operator\">=</span> <span class=\"token function\">spotShadowMaskCal</span><span class=\"token punctuation\">(</span>spotShadowMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> spotFragPos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> spotLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            result <span class=\"token operator\">+</span><span class=\"token operator\">=</span> perSpotLightRes <span class=\"token operator\">*</span> shadow<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor builtin\">#endif</span>\n    <span class=\"token preprocessor builtin\">#if</span> NUM_POINT_LIGHTS <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">vec3</span> perPointLightRes <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> NUM_POINT_LIGHTS<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            perPointLightRes <span class=\"token operator\">=</span> <span class=\"token function\">CalcPointLight</span><span class=\"token punctuation\">(</span>pointLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            shadow <span class=\"token operator\">=</span> <span class=\"token function\">pointShadowMaskCal</span><span class=\"token punctuation\">(</span>pointShadowMap<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointFragPos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pointLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            result <span class=\"token operator\">+</span><span class=\"token operator\">=</span> perPointLightRes <span class=\"token operator\">*</span> shadow<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token preprocessor builtin\">#endif</span>\n    result <span class=\"token operator\">=</span> baseColor <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ambient <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Todo：</p>\n<ul>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Frustum Culling</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> 实现其他的<a href=\"https://www.cnblogs.com/lancidie/archive/2012/02/07/2341298.html\">Soft ShadowMap</a>方法</p>\n</li>\n</ul>","fields":{"slug":"/shadow-map/","prefix":"2019-07-02"},"frontmatter":{"title":"ShadowMap学习笔记","author":"todaylg","category":"小结","cover":{"childImageSharp":{"resize":{"src":"/static/bg-0f989bf59531c06d1be6221cfaa54c0a-ada8c.jpg"}}}}},"authornote":{"id":"20cdfd79-00b3-57fb-a29f-bb96dcd133a8","html":"<p><strong>todaylg</strong> </p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/shadow-map/","prev":{"id":"56d602ea-7a9b-5c5d-8549-6e91c5e11dcb","fields":{"slug":"/post-processing/","prefix":"2019-06-11","source":"posts"},"frontmatter":{"title":"Post-Processing学习笔记","category":"小结"}},"next":{"id":"6ddd280c-f9e4-597f-b3aa-eece9c89f808","fields":{"slug":"/math-base-1/","prefix":"2019-07-20","source":"posts"},"frontmatter":{"title":"《Mathematics for 3D Game Programming and Computer Graphics》读书笔记 (上)","category":"读书流水"}},"source":"posts"}}