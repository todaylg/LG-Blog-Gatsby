{"data":{"post":{"id":"3bdfb94d-b75b-588b-a90a-f3b10547e308","html":"<p>在通过Envtools将预计算的资源进行打包后，自然就需要在Viewer进行解包和渲染啦:</p>\n<p><a href=\"https://github.com/todaylg/three-viewer\">https://github.com/todaylg/three-viewer</a></p>\n<p>歪出来感叹一句，搂完Viewer以后照常发了个Twitter纪念，但是没想到得到了Threejs官推的转推以及Mr.doob大神的点赞，开心了好一会哈哈<del>快乐如此简单</del></p>\n<div style=\"text-align: center\">  \n<img style=\"width:100%;\" src=\"https://raw.githubusercontent.com/todaylg/LG-Blog-Gatsby/master/content/posts/2020-3-19--viewer-pbr/twitter.png\">  \n</div>\n<p>回到正题，首先需要Viewer完成的是IBL部分的光照，之前在EnvTools打包好的资源就派上用场啦，主要的解包流程可以直接参考osg.js的实现，解完包以后可以得到：</p>\n<ul>\n<li>SH coefficients</li>\n<li>Prefiltered Mipmap CubeMap</li>\n<li>Blur Background CubeMap</li>\n<li>BRDF LUT</li>\n<li>Sunlight</li>\n</ul>\n<p>基于这些资源便可以拟合环境光照的效果啦</p>\n<h2>环境光照</h2>\n<h3>IBL</h3>\n<p>IBL也是分为Diffuse部分和Specular部分。</p>\n<p>Diffuse部分可以直接通过SH coefficients计算，相关文章：</p>\n<ul>\n<li>\n<p><a href=\"https://cseweb.ucsd.edu/~ravir/papers/envmap/envmap.pdf\">https://cseweb.ucsd.edu/~ravir/papers/envmap/envmap.pdf</a></p>\n</li>\n<li>\n<p><a href=\"https://zhuanlan.zhihu.com/p/63755519\">https://zhuanlan.zhihu.com/p/63755519</a></p>\n</li>\n</ul>\n<p>Specular部分则是根据不同粗糙度对不同级别Mipmap的预计算CubeMap进行采样，再进行BRDF的计算，相关文章：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/66518450\">https://zhuanlan.zhihu.com/p/66518450</a></p>\n<p>手机端出于性能原因需要用过拟合函数代替LUT采样，相关文章：</p>\n<ul>\n<li><a href=\"https://www.unrealengine.com/blog/physically-based-shading-on-mobile\">https://www.unrealengine.com/blog/physically-based-shading-on-mobile</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/68158277\">https://zhuanlan.zhihu.com/p/68158277</a></li>\n</ul>\n<h3>Background</h3>\n<p>直接使用一个大的Sphere包裹场景，然后在背面采样Background CubeMap，最后再通过矩阵同步一下相机的运动方向即可。</p>\n<h3>Sunlight</h3>\n<p>通过Envtools可以拿到环境贴图中最亮区域的方向，在场景同一方向添加一盏方向光即可模拟太阳</p>\n<h3>Env Rotation</h3>\n<p>为了同步视觉效果，环境光的旋转不仅影响到IBL的计算，Background和Sunlight也需要同步旋转：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">syncEnvTransform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>invCameraQuaternion<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>quaternion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">conjugate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraRotationMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">makeRotationFromQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>invCameraQuaternion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oringinCameraMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">extractRotation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>matrixWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">updateEnvironmentRotation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Add panel rotation</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>envRotationFromPanel<span class=\"token punctuation\">.</span><span class=\"token function\">makeRotationY</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>envRotationMat<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">multiplyMatrices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraRotationMatrix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>envRotationFromPanel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// Direction compute by position</span>\n\t<span class=\"token keyword\">let</span> resultSunlight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sunLightStartPos<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tresultSunlight<span class=\"token punctuation\">.</span><span class=\"token function\">applyMatrix4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>envRotationMat<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">applyMatrix4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oringinCameraMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sunLight<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>resultSunlight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>相关文章：</p>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50699527\">https://zhuanlan.zhihu.com/p/50699527</a></li>\n</ul>\n<h2>直接光照</h2>\n<p>光光有环境光照是不够的，想要在场景中添加的直接光源有效果（比如前面为了模拟日光添加方向光），就还需要再实现直接光照的部分。</p>\n<p>直接光照也同样还是分为Diffuse部分和Specular部分。各部分不同的渲染方程有很多种，为了便于比对不同方程的不同渲染效果，最后是将方程弄成了可选列表放在了Viewer中（直接把UE4 BRDF中的公式全搬了过来😂，Unreal强无敌）。</p>\n<p>Diffuse部分的渲染方程：</p>\n<ul>\n<li>Lambert</li>\n<li>Burley：[Burley 2012, “Physically-Based Shading at Disney”]</li>\n<li>OrenNayar：[Gotanda 2012, “Beyond a Simple Physically Based Blinn-Phong Model in Real-Time”]</li>\n<li>Gotanda：[Gotanda 2014, “Designing Reflectance Models for New Consoles”]</li>\n</ul>\n<p>相关文章：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/53086060\">https://zhuanlan.zhihu.com/p/53086060</a></p>\n<p>Specular部分还是我们熟悉的Cook-Torrance BRDF</p>\n<p>Normal Distribution Functions(NDF)方程：</p>\n<ul>\n<li>Blinn：[Blinn 1977, “Models of light reflection for computer synthesized pictures”]</li>\n<li>Beckmann：[Beckmann 1963, “The scattering of electromagnetic waves from rough surfaces”]</li>\n<li>GGX / Trowbridge-Reitz：[Walter et al. 2007, “Microfacet models for refraction through rough surfaces”]</li>\n</ul>\n<p>相关文章：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/69380665\">https://zhuanlan.zhihu.com/p/69380665</a></p>\n<p>Fresnel方程：</p>\n<ul>\n<li>Schlick：[Schlick 1994, “An Inexpensive BRDF Model for Physically-Based Rendering”]</li>\n<li>CookTorrance：[Cook-Torrance 1982]</li>\n</ul>\n<p>相关文章：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/53086060\">https://zhuanlan.zhihu.com/p/53086060</a></p>\n<p>Visibility Term方程：</p>\n<ul>\n<li>Implicit</li>\n<li>Neumann：[Neumann et al. 1999, “Compact metallic reflectance models”]</li>\n<li>Kelemen：[Kelemen 2001, “A microfacet based coupled specular-matte brdf model with importance sampling”]</li>\n<li>Schlick：[Schlick 1994, “An Inexpensive BRDF Model for Physically-Based Rendering”]</li>\n<li>Smith：[Smith 1967, “Geometrical shadowing of a random rough surface”]</li>\n<li>SmithJointApprox：[Heitz 2014, “Understanding the Masking-Shadowing Function in Microfacet-Based BRDFs”]</li>\n</ul>\n<p>相关文章：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/81708753\">https://zhuanlan.zhihu.com/p/81708753</a></p>\n<p>其实作为工程党，只需要大概知道有这么些公式就拉倒了，强撸Paper必定会导致秃顶的惨剧。</p>\n<p>所以我觉得最合理的流程应该是这样的：先等着算法大佬对公式进行分析总结，再等Unreal对公式进行实践及优化，最后捡现成的，直接去翻Unreal的源码把函数扒出来用即可，这样头发又不用掉，效果还好，简直乃神策也。</p>\n<p>其实考虑到效果及后续扩展(比如各项异性材质)，渲染方程基本都是：</p>\n<p>Diffuse: Lambert</p>\n<p>Specular: D<em>GGX * Vis</em>SmithJointApprox * F_Schlick</p>\n<p>最后再放几张渲染效果(可爱的短发塞尔达！)：</p>\n<div style=\"text-align: center\">  \n<img style=\"width:100%;\" src=\"https://raw.githubusercontent.com/todaylg/LG-Blog-Gatsby/master/content/posts/2020-3-19--viewer-pbr/zelda.png\">  \n</div>\n<p>MMMMMMaster Sword!!！</p>\n<div style=\"text-align: center\">  \n<img style=\"width:100%;\" src=\"https://raw.githubusercontent.com/todaylg/LG-Blog-Gatsby/master/content/posts/2020-3-19--viewer-pbr/masterSword.png\">  \n</div>\n<div style=\"text-align: center\">  \n<img style=\"width:100%;\" src=\"https://raw.githubusercontent.com/todaylg/LG-Blog-Gatsby/master/content/posts/2020-3-19--viewer-pbr/bg.png\">  \n</div>\n<p>在线体验地址 ：<a href=\"https://todaylg.com/three-viewer/\">https://todaylg.com/three-viewer/</a></p>\n<h3>Todo</h3>\n<ul>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Anisotropy(GGX)</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Clearcoat</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Sheen</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Specular gloss</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> MorphTarget/Skin Animation</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Post-processing(SSS、TAA)</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Ground Shadow</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Shadow Jitter</p>\n</li>\n</ul>\n<p>其实Todo List渐渐变成了Undo List（逃。。。）</p>","fields":{"slug":"/viewer-pbr/","prefix":"2020-3-19"},"frontmatter":{"title":"Viewer与PBR","author":"todaylg","category":"大结","cover":{"childImageSharp":{"resize":{"src":"/static/bg-e18a1938fddf5546eca7f000bd48188a-160fa.png"}}}}},"authornote":{"id":"20cdfd79-00b3-57fb-a29f-bb96dcd133a8","html":"<p><strong>todaylg</strong> </p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/viewer-pbr/","prev":{"id":"463189d9-57f4-5739-803a-bcea665bda89","fields":{"slug":"/envtools/","prefix":"2020-3-03","source":"posts"},"frontmatter":{"title":"EnvTools","category":"大结"}},"source":"posts"}}