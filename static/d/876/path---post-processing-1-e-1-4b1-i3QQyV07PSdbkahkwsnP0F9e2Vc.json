{"data":{"post":{"id":"61a14835-14df-558d-8f49-8993a1165a01","html":"<p>Post Processing Effect指的是后期处理效果，这些效果的实现是基于已经渲染的场景之上的，即通过将场景以纹理形式渲染到一个覆盖全屏的四边形上，再对纹理图形进行处理：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 一个覆盖全屏的大三角形，保持屏幕内的UV坐标映射仍为0 => 1，画图即可知。此法性能优于使用四边形。</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>geometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Geometry</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n    position<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> size<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    uv<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> size<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>RenderTarget/Post</h3>\n<p>在进行后处理之前我们需要将场景先渲染到<a href=\"https://learnopengl-cn.github.io/04%20Advanced%20OpenGL/05%20Framebuffers/\">帧缓冲(FrameBuffer)</a>上，RenderTarget就是对创建完整的Framebuffer进行的封装：</p>\n<ul>\n<li>\n<p>创建及绑定Framebuffer</p>\n</li>\n<li>\n<p>创建附件（Texture/Renderbuffer Object）并附加缓冲（Color/Depth/Stencil）</p>\n</li>\n</ul>\n<p>而Post则是对场景需要添加多个后处理效果的情况进行管理：</p>\n<ul>\n<li>\n<p>根据各个处理效果的Shader（即Program）实例化相应Mesh实体</p>\n</li>\n<li>\n<p>Ping-Pong Pass渲染队列</p>\n</li>\n</ul>\n<p>Ping-Pong Pass的后处理队列指的是上一处理效果的输出为下一处理效果的输入（使用两个FrameBufferObject交替作为input和output的target实现），适用于多个后处理效果的叠加：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//Post drawCall</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token comment\">// 首先正常渲染场景</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n        scene<span class=\"token punctuation\">,</span> camera<span class=\"token punctuation\">,</span> update<span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">,</span> frustumCull<span class=\"token punctuation\">,</span>\n        target<span class=\"token punctuation\">:</span> enabledPasses<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fbos<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFBO<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> target<span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>enabledPasses<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Ping-Pong Pass</span>\n    enabledPasses<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pass<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>\n        <span class=\"token comment\">// 最后一次Render (i == enabledPasses.length - 1) render回到target(默认即回到main FrameBuffer)</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gl<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n            scene<span class=\"token punctuation\">:</span> pass<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">,</span> clear<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n            target<span class=\"token punctuation\">:</span> i <span class=\"token operator\">===</span> enabledPasses<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> target <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fbos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFBO<span class=\"token punctuation\">]</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 替换输入输出target</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFBO <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFBO<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Post Processing Effect</h3>\n<p>常见的后处理效果包括：</p>\n<ul>\n<li>\n<p>Gaussian Blur</p>\n</li>\n<li>\n<p>FXAA</p>\n</li>\n<li>\n<p>Glitch</p>\n</li>\n<li>\n<p>CrossFade</p>\n</li>\n<li>\n<p>Bloom</p>\n</li>\n<li>\n<p>ToneMapping</p>\n</li>\n<li>\n<p>Vignette</p>\n</li>\n<li>\n<p>LensFlare</p>\n</li>\n<li>\n<p>reProjection</p>\n</li>\n<li>\n<p>Depth of Field（DOF）</p>\n</li>\n<li>\n<p>Motion Blur</p>\n</li>\n</ul>\n<p>这些效果可以使得场景变得更为炫酷，可以说对于构建炫酷场景是不可或缺的部分，所以这部分决定好好学习一波，瞅瞅各个效果的原理并进行实践。</p>\n<p>实践效果还是在<a href=\"http://todaylg.com/LGL/examples/?src=postProcessing_Blur.html\">Example</a></p>\n<h3>Gaussian Blur</h3>\n<p>高斯模糊的理论知识可以参考<a href=\"https://xiazdong.github.io/2017/04/30/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A/\">这篇文章</a></p>\n<p>之前一直奇怪为什么纹理要规定纹理环绕方式，原来一些算法对纹理采样的坐标还真是会超出边缘边界的。</p>\n<p>具体实现的话可以直接使用<a href=\"https://github.com/Jam3/glsl-fast-gaussian-blur\">已有轮子</a> , 其Shader根据blur的模糊像素（双向时=>5/9/13）将权重具体数值化来提升运行效率：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">vec4 <span class=\"token function\">blur5</span><span class=\"token punctuation\">(</span>sampler2D image<span class=\"token punctuation\">,</span> vec2 uv<span class=\"token punctuation\">,</span> vec2 resolution<span class=\"token punctuation\">,</span> vec2 direction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  vec4 color <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  vec2 off1 <span class=\"token operator\">=</span> <span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.3333333333333333</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> direction<span class=\"token punctuation\">;</span>\n  color <span class=\"token operator\">+=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.29411764705882354</span><span class=\"token punctuation\">;</span>\n  color <span class=\"token operator\">+=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> uv <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>off1 <span class=\"token operator\">/</span> resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.35294117647058826</span><span class=\"token punctuation\">;</span>\n  color <span class=\"token operator\">+=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> uv <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>off1 <span class=\"token operator\">/</span> resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.35294117647058826</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>由理论知识的那篇文章可知，将二维高斯分布函数分解为两个一维高斯分布函数相乘可以降低算法复杂度，从而获得性能提升。所以我们使用的时候需要进行双向Pass才能得到正确结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> post <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Post</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> w <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> h <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Y轴</span>\npost<span class=\"token punctuation\">.</span><span class=\"token function\">addPass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    fragment<span class=\"token punctuation\">:</span> blurPassShader<span class=\"token punctuation\">,</span>\n\n    uniforms<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    resolution<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        direction<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// X轴</span>\npost<span class=\"token punctuation\">.</span><span class=\"token function\">addPass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    fragment<span class=\"token punctuation\">:</span> blurPassShader<span class=\"token punctuation\">,</span>\n\n    uniforms<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n        resolution<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        direction<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>FXAA</h3>\n<p>FXAA是抗锯齿(Anti-Aliasing)技术之一，抗锯齿技术的相关的介绍可以参考<a href=\"https://www.zhihu.com/question/20236638/answer/44821615\">这篇文章</a></p>\n<p>其中的SMAA和MLAA技术介绍可以参考<a href=\"https://blog.csdn.net/qezcwx11/article/details/78426052\">这篇文章</a></p>\n<p>而关于FXAA具体的计算原理可以参考<a href=\"http://blog.simonrodriguez.fr/articles/30-07-2016_implementing_fxaa.html?tdsourcetag=s_pctim_aiomsg\">这篇文章</a></p>\n<p>后处理AA（PPAA）的核心方法其实都是边缘检测+blur来达到柔化边缘的抗锯齿效果，各种AA不同主要在于各自的边缘检测算法不同。</p>\n<p>具体实现可以直接使用<a href=\"https://github.com/mattdesl/glsl-fxaa\">已有轮子</a></p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">vec4</span> <span class=\"token function\">fxaa</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> uv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> resolution<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token comment\">//没搞懂的计算原理</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    FragColor <span class=\"token operator\">=</span> <span class=\"token function\">fxaa</span><span class=\"token punctuation\">(</span>tMap<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">,</span> resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Bloom</h3>\n<p>Bloom的相关介绍可以参考<a href=\"https://learnopengl-cn.github.io/05%20Advanced%20Lighting/07%20Bloom/\">这篇文章</a></p>\n<p>核心其实就是：提取场景中的亮部=>对亮部进行模糊处理=>与原场景融合。</p>\n<p>正常处理步骤如下：</p>\n<ul>\n<li>\n<p>场景渲染 => 亮部提取 => 模糊处理 => 结果（FrameBufferObejct）</p>\n</li>\n<li>\n<p>场景渲染（FrameBufferObejct）</p>\n</li>\n<li>\n<p>原场景与结果融合</p>\n</li>\n</ul>\n<p>可以看到同样是场景渲染这个步骤，但是我们分别渲染到了两个不同的帧缓冲，这里可以使用MRT(Multiple Render Targets，多渲染目标)进行优化：只需创建一个帧缓冲对象，经过Shader渲染到多个颜色缓冲中：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">//WebGL 1.0</span>\n<span class=\"token preprocessor builtin\">#extension</span> GL_EXT_draw_buffers <span class=\"token punctuation\">:</span> require \n<span class=\"token keyword\">precision</span> <span class=\"token keyword\">highp</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gl_FragData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//gl.COLOR_ATTACHMENT00</span>\n\n    gl_FragData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//gl.COLOR_ATTACHMENT01</span>\n    gl_FragData<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//gl.COLOR_ATTACHMENT02</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>MTR在WebGL1.0依赖<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/WEBGL_draw_buffers\">WEBGL_draw_buffers扩展</a>的支持，在WebGL2.0原生支持：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/drawBuffers\">drawBuffers</a></p>\n<p><strong>亮部提取：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// uniforms: {</span>\n<span class=\"token comment\">//    luminosityThreshold: { value: 0.8 },</span>\n<span class=\"token comment\">//    smoothWidth: { value: 0.01 },</span>\n<span class=\"token comment\">//    defaultOpacity: { value : 0 },</span>\n<span class=\"token comment\">//    defaultColor: { value : new Color(0,0,0) }</span>\n<span class=\"token comment\">// }</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec4</span> texel <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span> tMap<span class=\"token punctuation\">,</span> vUv <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> luma <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.299</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.587</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.114</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Luma值表示为介于0.0和1.0之间的灰度级（公式L = 0.299 * R + 0.587 * G + 0.114 * B）</span>\n    <span class=\"token keyword\">float</span> v <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span> texel<span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">,</span> luma <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec4</span> outputColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span> defaultColor<span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">,</span> defaultOpacity <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//限制在容差范围内</span>\n    <span class=\"token keyword\">float</span> alpha <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span> luminosityThreshold<span class=\"token punctuation\">,</span> luminosityThreshold <span class=\"token operator\">+</span> smoothWidth<span class=\"token punctuation\">,</span> v <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//if v ≤ luminosityThreshold and 1.0 if v ≥ luminosityThreshold + smoothWidth</span>\n\n    FragColor <span class=\"token operator\">=</span>  <span class=\"token function\">mix</span><span class=\"token punctuation\">(</span> outputColor<span class=\"token punctuation\">,</span> texel<span class=\"token punctuation\">,</span> alpha <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//x⋅(1−a)+y⋅a => y⋅a</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>模糊处理：</strong></p>\n<p>模糊处理基于高斯模糊，模糊的质量高低基本就决定了泛光效果的质量好坏，所以并不是简单的一次高斯模糊，而是多次不同半径的高斯模糊并按不同权重结合，原理可参考<a href=\"https://docs.unrealengine.com/udk/Three/Bloom.html\">这篇文章</a></p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\">let w <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">.</span>dpr<span class=\"token punctuation\">;</span>\nlet h <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">.</span>dpr<span class=\"token punctuation\">;</span>\n\nlet tw <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\nlet th <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\nlet blurPasses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> levels <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//重复5次双向高斯模糊</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>let i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> levels<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    tw <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>tw<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    th <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>th<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> blurPass <span class=\"token operator\">=</span> new <span class=\"token class-name\">Post</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Y轴</span>\n\n    blurPass<span class=\"token punctuation\">.</span><span class=\"token function\">addPass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    fragment<span class=\"token punctuation\">:</span> blurPassShader<span class=\"token punctuation\">,</span>\n\n    uniforms<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n        tMap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> thresholdPassTarget <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        resolution<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> new <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">,</span> th<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n            direction<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> new <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//X轴</span>\n\n    blurPass<span class=\"token punctuation\">.</span><span class=\"token function\">addPass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    fragment<span class=\"token punctuation\">:</span> blurPassShader<span class=\"token punctuation\">,</span>\n\n       uniforms<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n           resolution<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> new <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span>tw<span class=\"token punctuation\">,</span> th<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n           direction<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> new <span class=\"token class-name\">Vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n       <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    let blurPassTarget <span class=\"token operator\">=</span> new <span class=\"token class-name\">RenderTarget</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     blurPasses<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> blurPass<span class=\"token punctuation\">,</span> blurPassTarget <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最后各模糊纹理再与原场景混合：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// bloomFactors: { value: [ 1.0, 0.8, 0.6, 0.4, 0.2 ] }</span>\n<span class=\"token comment\">// bloomTintColors: { value: [ new Vec3(1), new Vec3(1), new Vec3(1),new  Vec3(1), new Vec3(1) ]}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">lerpBloomFactor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> factor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">float</span> mirrorFactor <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span> <span class=\"token operator\">-</span> factor<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">mix</span><span class=\"token punctuation\">(</span>factor<span class=\"token punctuation\">,</span> mirrorFactor<span class=\"token punctuation\">,</span> bloomRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">vec4</span> bloom <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   bloom <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">lerpBloomFactor</span><span class=\"token punctuation\">(</span>bloomFactors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>bloomTintColors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>blurTexture1<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   bloom <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">lerpBloomFactor</span><span class=\"token punctuation\">(</span>bloomFactors<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>bloomTintColors<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>blurTexture2<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   bloom <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">lerpBloomFactor</span><span class=\"token punctuation\">(</span>bloomFactors<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>bloomTintColors<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>blurTexture3<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   bloom <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">lerpBloomFactor</span><span class=\"token punctuation\">(</span>bloomFactors<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>bloomTintColors<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>blurTexture4<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   bloom <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">lerpBloomFactor</span><span class=\"token punctuation\">(</span>bloomFactors<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>bloomTintColors<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>blurTexture5<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   bloom <span class=\"token operator\">*</span><span class=\"token operator\">=</span> bloomStrength<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">vec4</span> orignColor <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>tMap<span class=\"token punctuation\">,</span> vUv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   FragColor <span class=\"token operator\">=</span> orignColor <span class=\"token operator\">+</span> bloom<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>CrossFade</h3>\n<p>CrossFade效果的原理其实就是基于两个不同场景插值，若是有添加过渡的纹理图片则以纹理图片为基础调整插值：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// mixRatio: 0=>1</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec4</span> texel1 <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span> tMap<span class=\"token punctuation\">,</span> vUv <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec4</span> texel2 <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span> tPreMap<span class=\"token punctuation\">,</span> vUv <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useTexture<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">//是否有过渡用的纹理图片</span>\n        <span class=\"token keyword\">vec4</span> transitionTexel <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span> tMixTexture<span class=\"token punctuation\">,</span> vUv <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> r <span class=\"token operator\">=</span> mixRatio <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">+</span> threshold <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> threshold<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> mixf<span class=\"token operator\">=</span> <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>transitionTexel<span class=\"token punctuation\">.</span>r <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span>threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// magic算法??</span>\n        FragColor <span class=\"token operator\">=</span> <span class=\"token function\">mix</span><span class=\"token punctuation\">(</span> texel1<span class=\"token punctuation\">,</span> texel2<span class=\"token punctuation\">,</span> mixf <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        FragColor <span class=\"token operator\">=</span> <span class=\"token function\">mix</span><span class=\"token punctuation\">(</span> texel2<span class=\"token punctuation\">,</span> texel1<span class=\"token punctuation\">,</span> mixRatio <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Glitch</h3>\n<p>Glitch效果的核心在于变化UV坐标，从而达到各种扰乱的效果：</p>\n<p>生成随机的扰乱数据贴图:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> dtSize <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dataArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span> dtSize <span class=\"token operator\">*</span> dtSize <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dataLength <span class=\"token operator\">=</span> dtSize <span class=\"token operator\">*</span> dtSize<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//填充随机数</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dataLength<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> val <span class=\"token operator\">=</span> <span class=\"token function\">randFloat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dataArr<span class=\"token punctuation\">[</span> i <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    dataArr<span class=\"token punctuation\">[</span> i <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    dataArr<span class=\"token punctuation\">[</span> i <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> dataTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    image<span class=\"token punctuation\">:</span> dataArr<span class=\"token punctuation\">,</span>\n    generateMipmaps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token punctuation\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FLOAT</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token punctuation\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">RGB</span><span class=\"token punctuation\">,</span>\n    internalFormat<span class=\"token punctuation\">:</span> gl<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span>isWebgl2 <span class=\"token operator\">?</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">RGB16F</span> <span class=\"token punctuation\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">RGB</span><span class=\"token punctuation\">,</span>\n    flipY<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token punctuation\">:</span> dtSize<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> uniformsProp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n     perturbationMap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> dataTexture <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     amount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.08</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     angle<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.02</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     random<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.02</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     seed_x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.02</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//-1,1</span>\n     seed_y<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.02</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//-1,1</span>\n     distortion_x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     distortion_y<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.6</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     col_s<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.02</span> <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<p>变换UV坐标模拟多种扰乱效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">float</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span> co<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>co<span class=\"token punctuation\">.</span>xy <span class=\"token punctuation\">,</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">12.9898</span><span class=\"token punctuation\">,</span><span class=\"token number\">78.233</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">43758.5453</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//magic</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec2</span> p <span class=\"token operator\">=</span> vUv<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> xs <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>gl_FragCoord<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> ys <span class=\"token operator\">=</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>gl_FragCoord<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec4</span> normal <span class=\"token operator\">=</span> texture <span class=\"token punctuation\">(</span>perturbationMap<span class=\"token punctuation\">,</span> p<span class=\"token operator\">*</span>random<span class=\"token operator\">*</span>random<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 1.block effect 块状随机扰乱</span>\n      <span class=\"token comment\">// Y轴</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>y<span class=\"token operator\">&lt;</span>distortion_x<span class=\"token operator\">+</span>col_s <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token punctuation\">.</span>y<span class=\"token operator\">></span>distortion_x<span class=\"token operator\">-</span>col_s<span class=\"token operator\">*</span>random<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>seed_x<span class=\"token operator\">></span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">1.</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> distortion_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> distortion_y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// X轴</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&lt;</span>distortion_y<span class=\"token operator\">+</span>col_s <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token punctuation\">.</span>x<span class=\"token operator\">></span>distortion_y<span class=\"token operator\">-</span>col_s<span class=\"token operator\">*</span>random<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>seed_y<span class=\"token operator\">></span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            p<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>distortion_x<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">1.</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> distortion_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    p<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token operator\">=</span>normal<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>seed_x<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>random<span class=\"token operator\">/</span><span class=\"token number\">5.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span><span class=\"token operator\">=</span>normal<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>seed_y<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>random<span class=\"token operator\">/</span><span class=\"token number\">5.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//2.RGB移位效果</span>\n    <span class=\"token keyword\">vec2</span> offset <span class=\"token operator\">=</span> amount <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec4</span> cr <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>tMap<span class=\"token punctuation\">,</span> p <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec4</span> cga <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>tMap<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec4</span> cb <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>tMap<span class=\"token punctuation\">,</span> p <span class=\"token operator\">-</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> cga<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> cga<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//3.雪花效果</span>\n    <span class=\"token keyword\">vec4</span> snow <span class=\"token operator\">=</span> <span class=\"token number\">200.</span><span class=\"token operator\">*</span>amount<span class=\"token operator\">*</span><span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>xs <span class=\"token operator\">*</span> random<span class=\"token punctuation\">,</span>ys <span class=\"token operator\">*</span> random<span class=\"token operator\">*</span><span class=\"token number\">50.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    FragColor <span class=\"token operator\">=</span> FragColor<span class=\"token operator\">+</span> snow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Vignette</h3>\n<p>Todo：</p>\n<ul>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> ToneMapping</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> Vignette</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> LensFlare</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> ReProjection</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> Depth of Field（DOF）</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Motion Blur</p>\n</li>\n</ul>","fields":{"slug":"/post-processing/","prefix":"2019-06-08"},"frontmatter":{"title":"Post-Processing学习笔记","author":"todaylg","category":"小结","cover":{"childImageSharp":{"resize":{"src":"/static/bg-0f989bf59531c06d1be6221cfaa54c0a-ada8c.jpg"}}}}},"authornote":{"id":"20cdfd79-00b3-57fb-a29f-bb96dcd133a8","html":"<p><strong>todaylg</strong> </p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/post-processing/","prev":{"id":"57176508-678d-50c2-9660-d35f0492e30d","fields":{"slug":"/blender-record/","prefix":"2019-06-01","source":"posts"},"frontmatter":{"title":"Blender学习笔记","category":"小结"}},"source":"posts"}}